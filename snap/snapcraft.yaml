name: imx8mm-evk
summary: NXP i.MX8M Mini EVK support package
description: |
 Support files for booting i.MX8M Mini EVK board

version: 22-1
type: gadget

base: core22

architectures:
  - build-on: [amd64, arm64]
    build-for: arm64

confinement: strict
grade: stable

parts:
  arm-trusted-firmware:
    plugin: nil
    source: https://github.com/nxp-imx/imx-atf.git
    source-type: git
    source-tag: lf-5.15.71-2.2.0
    source-depth: 1
    override-build: |
      platform="imx8mm"
      make \
        CROSS_COMPILE=${CRAFT_ARCH_TRIPLET}- \
        PLAT=${platform} \
        BUILD_BASE=${CRAFT_PART_BUILD}/build \
        bl31 \
        -j$(nproc)
      make \
        CROSS_COMPILE=${CRAFT_ARCH_TRIPLET}- \
        PLAT=${platform} \
        BUILD_BASE=${CRAFT_PART_BUILD}/build-optee \
        SPD=opteed \
        bl31 \
        -j$(nproc)
      cp ${CRAFT_PART_BUILD}/build/${platform}/release/bl31.bin \
         ${CRAFT_PART_INSTALL}/bl31-${platform}.bin
      cp ${CRAFT_PART_BUILD}/build-optee/${platform}/release/bl31.bin \
         ${CRAFT_PART_INSTALL}/bl31-${platform}.bin-optee
    prime:
      - -*

  optee-keys:
    plugin: dump
    source: https://git.launchpad.net/~ondrak/+git/dev-keys
    source-type: git
    source-branch: ta-keys
    organize:
      '*': ta-keys/
    prime:
      - -*

  optee-os:
    after:
      - optee-fde
      - optee-keys
    plugin: nil
    source: https://github.com/nxp-imx/imx-optee-os.git
    source-type: git
    source-tag: lf-5.15.71-2.2.0
    source-depth: 1
    override-build: |
      export ARCH="arm"
      export CROSS_COMPILE="${CRAFT_ARCH_TRIPLET}-"
      export CROSS_COMPILE_core="${CRAFT_ARCH_TRIPLET}-"
      export CROSS_COMPILE_ta_arm64="${CRAFT_ARCH_TRIPLET}-"
      export CFG_USER_TA_TARGETS="ta_arm64"
      export CFG_ARM64_core=y
      export DEBUG=0
      export CFG_TEE_CORE_LOG_LEVEL=1
      export CFG_TEE_TA_LOG_LEVEL=1
      export CFG_TEE_BENCHMARK=n
      export CFG_TEE_RAM_VA_SIZE=0x00280000
      export CFG_CORE_HEAP_SIZE=0x00100000
      # set NXP platform
      export PLATFORM=imx
      export PLATFORM_FLAVOR=mx8mmevk
      # add optee-fde TA
      cp -r ${CRAFT_STAGE}/optee-fde/ta/fde_key_handler ${CRAFT_PART_BUILD}/ta/
      # determine keys to be used
      export TA_PUBLIC_KEY="${CRAFT_STAGE}/ta-keys/ta_public.pem"
      make O=${CRAFT_PART_BUILD}/out -j$(nproc)
      make O=${CRAFT_PART_BUILD}/out -j$(nproc) \
         CFG_EARLY_TA=y \
         EARLY_TA_PATHS="out/ta/pkcs11/fd02c9da-306c-48c7-a49c-bbd827ae86ee.stripped.elf \
                 out/ta/trusted_keys/f04a0fe7-1f5d-4b9b-abf7-619b85b4ce8c.stripped.elf \
                 out/ta/fde_key_handler/fd1b2a86-3668-11eb-adc1-0242ac120002.stripped.elf"
      ${CRAFT_ARCH_TRIPLET}-objcopy \
         -O binary \
         ${CRAFT_PART_BUILD}/out/core/tee.elf \
         ${CRAFT_PART_INSTALL}/tee.bin
    prime:
      - -*

  optee-client:
    plugin: make
    source: https://github.com/OP-TEE/optee_client.git
    source-type: git
    source-tag: 3.18.0
    source-depth: 1
    make-parameters:
      - ARCH="arm64"
      - DEBUG=0
      - CROSS_COMPILE="${CRAFT_ARCH_TRIPLET}-"
      - CFG_TEE_CLIENT_LOAD_PATH="/"
      - CFG_TA_TEST_PATH=n
      - CFG_TEE_SUPP_LOG_LEVEL=0
      - SBINDIR=/usr/sbin
      - LIBDIR=/usr/lib/${CRAFT_ARCH_TRIPLET}
    stage:
      - usr/sbin
      - usr/lib/*/lib*so*

  optee-fde:
    plugin: dump
    source: https://git.launchpad.net/~ondrak/+git/optee-uc-fde
    source-type: git
    source-branch: master
    override-pull: |
      craftctl default
      git apply ${CRAFT_PROJECT_DIR}/0001-ta-disable-TA-lock.patch
    organize:
      '*': optee-fde/
    prime:
      - -*

  pub-signing-key:
    plugin: dump
    source: https://git.launchpad.net/~ondrak/+git/dev-keys
    source-type: git
    source-branch: master
    stage:
      - u-boot-pubkey.dtsi
    prime:
      - -*

  u-boot:
    after:
      - pub-signing-key
      - flash-script
    plugin: nil
    source: https://git.launchpad.net/~ondrak/+git/u-boot
    source-type: git
    source-tag: lf-5.15.71-2.2.0-uc
    source-depth: 1
    override-build: |
      # copy in place dtsi with pub part of kernel signing key
      cp ${CRAFT_STAGE}/u-boot-pubkey.dtsi \
         ${CRAFT_PART_BUILD}/arch/arm/dts/u-boot-pubkey.dtsi
      # update mmc_seed_part and mmc_boot_part from uc.lst
      mmc_seed_part="$(grep mmc_seed_part ${CRAFT_STAGE}/blobs/uc.lst | sed -e 's/^# //')"
      mmc_boot_part="$(grep mmc_boot_part ${CRAFT_STAGE}/blobs/uc.lst | sed -e 's/^# //')"
      sed -i \
         -e 's/mmc_seed_part=\(.*\)\\0"/'"${mmc_seed_part}"'\\0"/g' \
         -e 's/mmc_boot_part=\(.*\)\\0"/'"${mmc_boot_part}"'\\0"/g' \
         ${CRAFT_PART_BUILD}/include/configs/*.h
      # ensure cross-build works
      export CROSS_COMPILE="aarch64-linux-gnu-"
      export CC="aarch64-linux-gnu-gcc"
      # Add GIT revision to the local version
      head=$(git rev-parse --verify --short HEAD 2> /dev/null)
      imx_version=$(git describe --tags | cut -c 4-)
      printf "%s%s%s" "-${imx_version}" "+g" "${head}" > .scmversion
      make imx8mm_evk_config
      make -j$(nproc)
      cp u-boot.bin ${CRAFT_PART_INSTALL}/u-boot.bin
      cp spl/u-boot-spl.bin ${CRAFT_PART_INSTALL}/u-boot-spl.bin
      mkdir -p ${CRAFT_PART_INSTALL}/imx-boot-tools
      cp u-boot-nodtb.bin ${CRAFT_PART_INSTALL}/imx-boot-tools
      cp u-boot.dtb \
         ${CRAFT_PART_INSTALL}/imx-boot-tools/imx8mm-evk.dtb
      # copy tools/mkimage tool for imx-boot stage
      cp tools/mkimage ${CRAFT_PART_INSTALL}
      tools/mkenvimage -r -s 4096 -o ${CRAFT_PART_INSTALL}/boot.sel - < /dev/null
      touch ${CRAFT_PART_INSTALL}/uboot.conf
    prime:
      - boot.sel
      - uboot.conf

  imx-firmware:
    plugin: nil
    override-pull: |
      wget https://www.nxp.com/lgfiles/NMG/MAD/YOCTO/firmware-imx-8.18.bin \
        -O firmware-imx.bin
    override-build: |
      chmod +x firmware-imx.bin
      ./firmware-imx.bin --force --auto-accept
      cp -r firmware-imx-*/firmware ${CRAFT_PART_INSTALL}
    prime:
      - -*

  imx-boot:
    after:
      - arm-trusted-firmware
      - imx-firmware
      - optee-os
      - u-boot
    plugin: nil
    source: https://github.com/nxp-imx/imx-mkimage.git
    source-type: git
    source-tag: lf-5.15.71-2.2.0
    source-depth: 1
    override-build: |
      platform="imx8mm"
      # firmware files
      for ddr_firmware in lpddr4_pmu_train_1d_imem.bin lpddr4_pmu_train_1d_dmem.bin lpddr4_pmu_train_2d_imem.bin lpddr4_pmu_train_2d_dmem.bin; do
        cp ${CRAFT_STAGE}/firmware/ddr/synopsys/${ddr_firmware} iMX8M
      done
      cp ${CRAFT_STAGE}/firmware/hdmi/cadence/signed_dp_imx8m.bin iMX8M
      cp ${CRAFT_STAGE}/firmware/hdmi/cadence/signed_hdmi_imx8m.bin iMX8M
      # atf
      cp ${CRAFT_STAGE}/bl31-${platform}.bin-optee iMX8M/bl31.bin
      # optee
      cp ${CRAFT_STAGE}/tee.bin iMX8M
      # u-boot
      cp ${CRAFT_STAGE}/u-boot.bin iMX8M
      cp ${CRAFT_STAGE}/u-boot-spl.bin iMX8M
      cp ${CRAFT_STAGE}/imx-boot-tools/u-boot-nodtb.bin iMX8M
      cp ${CRAFT_STAGE}/imx-boot-tools/${platform}-evk.dtb iMX8M
      # setup link to mkimage_uboot
      ln -sf ${CRAFT_STAGE}/mkimage iMX8M/mkimage_uboot
      make SOC=iMX8MM flash_evk
      cp iMX8M/flash.bin ${CRAFT_PART_INSTALL}/
    organize:
      flash.bin: blobs/imx-boot.bin

build-packages:
  - bison
  - build-essential
  - device-tree-compiler
  - flex
  - libxml2-dev
  - libssl-dev
  - python3
  - python3-cryptography
  - python3-pyelftools
  - python3-pycryptodome
  - wget
  - zlib1g-dev
  - on amd64:
    - gcc-aarch64-linux-gnu
  - on arm64:
    - gcc
